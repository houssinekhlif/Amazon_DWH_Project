import pandas as pd

# Load the datasets
geographical_data = pd.read_csv("C:/Users/Moona/Downloads/Updated_Geographical_and_Market_Data.csv")
demographic_data = pd.read_csv("C:/Users/Moona/Downloads/Updated_Demographic_and_Economic_Data.csv")

# Define a function to clean a dataframe
def clean_dataframe(df):
    # Remove duplicates
    df = df.drop_duplicates()

    # Handle missing values
    df = df.fillna({
        col: df[col].median() if df[col].dtype in ['float64', 'int64'] else "Unknown"
        for col in df.columns
    })

    # Standardize column names
    df.columns = [col.strip().replace(" ", "_").lower() for col in df.columns]

    # Convert data types where applicable
    for col in df.select_dtypes(include=['object']).columns:
        if df[col].nunique() / len(df) < 0.05:  # Categorical if less than 5% unique values
            df[col] = df[col].astype("category")

    return df

# Clean both datasets
cleaned_geographical_data = clean_dataframe(geographical_data)
cleaned_demographic_data = clean_dataframe(demographic_data)

# Save cleaned datasets
cleaned_geographical_data_path = "C:/Users/Moona/Downloads/Cleaned_Geographical_Data.csv"
cleaned_demographic_data_path = "C:/Users/Moona/Downloads/Cleaned_Demographic_Data.csv"

cleaned_geographical_data.to_csv(cleaned_geographical_data_path, index=False)
cleaned_demographic_data.to_csv(cleaned_demographic_data_path, index=False)

print("Cleaned datasets saved:")
print(f"- {cleaned_geographical_data_path}")
print(f"- {cleaned_demographic_data_path}")

Star schema code:  
import pandas as pd

# Load datasets
sales_data = pd.read_csv("C:/Users/Moona/Downloads/Sales.csv")
inventory_data = pd.read_csv("C:/Users/Moona/Downloads/Inventory.csv")
clients_data = pd.read_csv("C:/Users/Moona/Downloads/Clients.csv")
stores_data = pd.read_csv("C:/Users/Moona/Downloads/Stores.csv")
cleaned_geographical_data = pd.read_csv("C:/Users/Moona/Downloads/Cleaned_Geographical_Data.csv")
cleaned_demographic_data = pd.read_csv("C:/Users/Moona/Downloads/Cleaned_Demographic_Data.csv")

# Create Date Dimension
sales_data['Date'] = pd.to_datetime(sales_data['Date'])
date_dimension = sales_data[['Date']].drop_duplicates()
date_dimension['Year'] = date_dimension['Date'].dt.year
date_dimension['Month'] = date_dimension['Date'].dt.month
date_dimension['Day'] = date_dimension['Date'].dt.day
date_dimension['Weekday'] = date_dimension['Date'].dt.day_name()

# Create Product Dimension
product_dimension = inventory_data[['Product_ID', 'Category', 'Title', 'Price', 'Material', 'Cost']].drop_duplicates()

# Create Customer Dimension
customer_dimension = clients_data[['Customer_ID', 'Name', 'Gender', 'Age', 'State', 'Income_Category', 'Marital_Status']].drop_duplicates()

# Create Store Dimension
store_dimension = stores_data[['StoreID', 'StoreName', 'Location', 'OpeningDate', 'TotalEmployees', 'AnnualRevenue', 'State']].drop_duplicates()

# Create Geography Dimension
geography_dimension = cleaned_geographical_data[['region', 'latitude', 'longitude', 'current_store_count', 'potential_new_stores', 'market_size']].drop_duplicates()

# Create Demographics Dimension
demographics_dimension = cleaned_demographic_data[['region', 'population', 'median_income', 'unemployment_rate', 'competitor_count', 'growth_rate']].drop_duplicates()

# Link Geography and Demographics Dimensions to Fact Table via Stores and Customers
store_dimension = store_dimension.merge(
    geography_dimension, left_on='State', right_on='region', how='left')
customer_dimension = customer_dimension.merge(
    demographics_dimension, left_on='State', right_on='region', how='left')

# Create Sales Fact Table
sales_fact = sales_data[['Product_ID', 'Customer_ID', 'StoreID', 'Date', 'Price', 'Revenue', 'Units_Sold']].drop_duplicates()

# Save all dimensions and the fact table as CSV files
output_paths = {
    "Date Dimension": "C:/Users/Moona/Downloads/Date_Dimension.csv",
    "Product Dimension": "C:/Users/Moona/Downloads/Product_Dimension.csv",
    "Customer Dimension": "C:/Users/Moona/Downloads/Customer_Dimension.csv",
    "Store Dimension": "C:/Users/Moona/Downloads/Store_Dimension.csv",
    "Geography Dimension": "C:/Users/Moona/Downloads/Geography_Dimension.csv",
    "Demographics Dimension": "C:/Users/Moona/Downloads/Demographics_Dimension.csv",
    "Sales Fact Table": "C:/Users/Moona/Downloads/Sales_Fact_Table.csv"
}

date_dimension.to_csv(output_paths["Date Dimension"], index=False)
product_dimension.to_csv(output_paths["Product Dimension"], index=False)
customer_dimension.to_csv(output_paths["Customer Dimension"], index=False)
store_dimension.to_csv(output_paths["Store Dimension"], index=False)
geography_dimension.to_csv(output_paths["Geography Dimension"], index=False)
demographics_dimension.to_csv(output_paths["Demographics Dimension"], index=False)
sales_fact.to_csv(output_paths["Sales Fact Table"], index=False)

print("Star schema created and saved:")
for name, path in output_paths.items():
    print(f"- {name}: {path}")
